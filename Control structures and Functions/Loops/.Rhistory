xelatex("mcmthesis-demo.tex")
pdflatex("mcmthesis-demo.tex")
library(tinytex)
xelatex("mcmthesis-demo.tex")
xelatex("mcmthesis-demo.tex")
xelatex("mcmthesis-demo.tex")
xelatex("mcmthesis-demo.tex")
options(encoding = "UTF-8")
library(tinytex)
options(encoding = "UTF-8")
xelatex("mcmthesis-demo.tex")
library(tinytex)
library(tinytex)
xelatex("mcmthesis-demo.tex")
?tryCatch
tryCatch(1, finally = print("Hello"))
e <- simpleError("test error")
e
?tidyeval
?eval
?{{}}
?enque
library(tidyverse)
?enque
?eque
?enque
?enquo
?!!
l
mtcars %>%
summarise(n = n(), mean = .$mpg)
library(tinytex)
pdflatex("MCM-ICM_Summary.tex")
library(mlr3verse)
task = tsk("iris")
learner = lrn("classif.rpart")
learner$train(task, row_ids = 1:120)
learner$model
predictions = learner$predict(task, row_ids = 121:150)
predictions
predictions$score(msr("classif.acc"))
pdflatex("MCM-ICM_Summary.tex")
library(tinytex)
pdflatex("MCM-ICM_Summary.tex")
library(tinytex)
xelatex("mcmthesis-demo.tex")
help()
styler:::style_active_file()
styler:::style_active_file()
lintr:::addin_lint()
f.obj <- c(0.4, 0.5)
require(lpSolve)
f.con <- matrix(c(0.3, 0.1, 0.5, 0.5, 0.6, 0.4), nrow = 3, byrow = TRUE)
f.dir <- c("<=", "=", ">=")
f.rhs <- c(2.7, 6, 6)
solution <- lp("min", f.obj, f.con, f.dir, f.rhs)
solusion$solution
solution$solution
View(solution)
View(solution)
solution$solution
source("~/R/Linear Programming/example1.r", echo=TRUE)
source("~/R/Linear Programming/example1.r", echo=TRUE)
source("~/R/Linear Programming/example1.r", echo=TRUE)
source("~/R/Linear Programming/example1.r", echo=TRUE)
View(f.con)
View(f.con)
source("~/R/Linear Programming/example1.r", echo=TRUE)
source("~/R/Linear Programming/example1.r", echo=TRUE)
View(f.con)
View(f.con)
f.con <- matrix(c(0.3, 0.1, 0.5, 0.5, 0.6, 0.4), nrow = 3)
View(f.con)
View(f.con)
source("~/R/Linear Programming/example1.r", echo=TRUE)
View(f.con)
source("~/R/Linear Programming/example1.r", echo=TRUE)
styler:::style_active_file()
lintr:::addin_lint()
lintr:::addin_lint_package()
styler:::style_active_file()
source("~/R/Linear Programming/example2.R", echo=TRUE)
source("~/R/Linear Programming/example2.R", echo=TRUE)
styler:::style_active_file()
styler:::style_active_file()
getwd()
source("./Control structures and Functions/Loops.R")
source("~/Control structures and Functions/Loops.R")
setwd("~/R/Control structures and Functions/Loops")
setwd("~/R")
source("~/Control structures and Functions/Loops/runnian.R")
source("~/R/Control structures and Functions/Loops/runnian.R")
setwd("D:\Document\R")
setwd("D:/Document/R")
install.packages("gapminder")
x <- list(a = 1:5, b = rnorm(10))
View(x)
View(x)
lapply(x, mean)
x <- 1:4
lapply(x, runif)
x <- list(a = 1:5, b = rnorm(10))
sapply(x, mean)
x <- rep(3, 4)
lapply(x, runif)
view(x)
View(x)
source("runnian.R")
setwd("~/R/Control structures and Functions/Loops")
source("~/runnian.R")
setwd("~/R/Control structures and Functions/Loops")
source("~/runnian.R")
source("~/runnian.R")
source("~/runnian.R")
source("~/runnian.R")
source("~/runnian.R")
