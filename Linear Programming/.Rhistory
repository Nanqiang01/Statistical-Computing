xelatex("mcmthesis-demo.tex")
pdflatex("mcmthesis-demo.tex")
library(tinytex)
xelatex("mcmthesis-demo.tex")
xelatex("mcmthesis-demo.tex")
xelatex("mcmthesis-demo.tex")
xelatex("mcmthesis-demo.tex")
options(encoding = "UTF-8")
library(tinytex)
options(encoding = "UTF-8")
xelatex("mcmthesis-demo.tex")
library(tinytex)
library(tinytex)
xelatex("mcmthesis-demo.tex")
?tryCatch
tryCatch(1, finally = print("Hello"))
e <- simpleError("test error")
e
?tidyeval
?eval
?{{}}
?enque
library(tidyverse)
?enque
?eque
?enque
?enquo
?!!
l
mtcars %>%
summarise(n = n(), mean = .$mpg)
library(tinytex)
pdflatex("MCM-ICM_Summary.tex")
library(mlr3verse)
task = tsk("iris")
learner = lrn("classif.rpart")
learner$train(task, row_ids = 1:120)
learner$model
predictions = learner$predict(task, row_ids = 121:150)
predictions
predictions$score(msr("classif.acc"))
pdflatex("MCM-ICM_Summary.tex")
library(tinytex)
pdflatex("MCM-ICM_Summary.tex")
library(tinytex)
xelatex("mcmthesis-demo.tex")
help()
install.packages(Ipsolver)
install.packages(lpsolver)
install.packages(lpsolve)
install.packages(lpSolve)
install.packages("lpSolve")
help("lpsolve")
help()
help(package = "lpsolve")
.libPaths("D:/Document/R/win-library/4.1")
install.packages("lpSolve")
.libPaths()
.libPaths("D:/Program Files/R/R-4.1.2/library")
install.packages("lpSolve")
install.packages("lpSolve")
setwd("~/R")
require(dplyr)
library(dplyr)
require(dplyr)
require(lpSolve)
chicago <- readRDS("chicago.rds")
setwd("~/R/class_1")
chicago <- readRDS("chicago.rds")
dim(chicago)
str(chicago)
names(chicago)
subset <- select(chicago, city:dptp)
head(subset)
select(chicago, -(city:dptp))
subset <- select(chicago, ends_with("2"))
setwd("~/R/Linear Programming")
